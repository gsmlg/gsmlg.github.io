(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{"./app/data/blogs/get-user-media.md":function(s,a,n){s.exports='<h2 id=html5->HTML5 访问视频和音频输入设备</h2> <h3 id=api-navigator-mediadevices-getusermedia->API: <code>Navigator.MediaDevices.getUserMedia()</code></h3> <h4 id=->语法：</h4> <pre class=hljs><code class="language-undefined"><span class=hljs-attribute>var promise</span> = navigator.mediaDevices.getUserMedia(constraints);</code></pre><h4 id=-constraints>参数： <em>constraints</em></h4> <p>可以配置为如下：</p> <pre class=hljs><code class="language-undefined"><span class=hljs-attribute>navigator.mediaDevices.getUsermedia({video</span>: true, audio: true});\n\n<span class=less><span class=hljs-selector-tag>navigator</span><span class=hljs-selector-class>.mediaDevices</span><span class=hljs-selector-class>.getUsermedia</span>({<span class=hljs-attribute>video</span>: {<span class=hljs-attribute>width</span>: <span class=hljs-number>800</span>, <span class=hljs-attribute>height</span>: <span class=hljs-number>480</span>}, <span class=hljs-attribute>audio</span>: true});\n\n<span class=hljs-selector-tag>navigator</span><span class=hljs-selector-class>.mediaDevices</span><span class=hljs-selector-class>.getUsermedia</span>({<span class=hljs-attribute>audio</span>: true,<span class=hljs-attribute>video</span>:  {\n    <span class=hljs-attribute>width</span>: { <span class=hljs-attribute>min</span>: <span class=hljs-number>1024</span>, <span class=hljs-attribute>ideal</span>: <span class=hljs-number>1280</span>, <span class=hljs-attribute>max</span>: <span class=hljs-number>1920</span> },\n    <span class=hljs-attribute>height</span>: { <span class=hljs-attribute>min</span>: <span class=hljs-number>776</span>, <span class=hljs-attribute>ideal</span>: <span class=hljs-number>720</span>, <span class=hljs-attribute>max</span>: <span class=hljs-number>1080</span> }\n  }});\n\n<span class=hljs-comment>// 移动设备</span>\n<span class=hljs-comment>// 前置摄像头</span>\n<span class=hljs-selector-tag>navigator</span><span class=hljs-selector-class>.mediaDevices</span><span class=hljs-selector-class>.getUsermedia</span>({ <span class=hljs-attribute>audio</span>: true, <span class=hljs-attribute>video</span>: { <span class=hljs-attribute>facingMode</span>: <span class=hljs-string>"user"</span> } })\n\n<span class=hljs-comment>// 确认主摄像头</span>\n<span class=hljs-selector-tag>navigator</span><span class=hljs-selector-class>.mediaDevices</span><span class=hljs-selector-class>.getUsermedia</span>({ <span class=hljs-attribute>audio</span>: true, <span class=hljs-attribute>video</span>: { <span class=hljs-attribute>facingMode</span>: { <span class=hljs-attribute>exact</span>: <span class=hljs-string>"environment"</span> } } })\n\n<span class=hljs-comment>// 限制帧数</span>\n<span class=hljs-selector-tag>navigator</span><span class=hljs-selector-class>.mediaDevices</span><span class=hljs-selector-class>.getUsermedia</span>({ <span class=hljs-attribute>video</span>: { <span class=hljs-attribute>frameRate</span>: { <span class=hljs-attribute>ideal</span>: <span class=hljs-number>10</span>, <span class=hljs-attribute>max</span>: <span class=hljs-number>15</span> } } })\n</span></code></pre><h4 id=->返回值</h4> <p><code>Promise</code> 对象</p> <ul> <li><p>成功返回为 <a href=https://developer.mozilla.org/en-US/docs/Web/API/MediaStream><code>MediaStream</code></a> </p> </li> <li><p>失败异常</p> <ul> <li>AbortError</li> <li>NotAllowedError</li> <li>NotFoundError</li> <li>NotReadableError</li> <li>OverConstrainedError</li> <li>SecurityError</li> <li>TypeError</li> </ul> </li> </ul> <h3 id=-navigator-getusermedia->早期接口为 <code>navigator.getUserMedia()</code></h3> <p>旧浏览器使用示例：</p> <pre class=hljs><code class=language-javascript><span class=hljs-comment>// Older browsers might not implement mediaDevices at all, so we set an empty object first</span>\n<span class=hljs-keyword>if</span> (navigator.mediaDevices === <span class=hljs-literal>undefined</span>) {\n  navigator.mediaDevices = {};\n}\n\n<span class=hljs-comment>// Some browsers partially implement mediaDevices. We can\'t just assign an object</span>\n<span class=hljs-comment>// with getUserMedia as it would overwrite existing properties.</span>\n<span class=hljs-comment>// Here, we will just add the getUserMedia property if it\'s missing.</span>\n<span class=hljs-keyword>if</span> (navigator.mediaDevices.getUserMedia === <span class=hljs-literal>undefined</span>) {\n  navigator.mediaDevices.getUserMedia = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>constraints</span>) </span>{\n\n    <span class=hljs-comment>// First get ahold of the legacy getUserMedia, if present</span>\n    <span class=hljs-keyword>var</span> getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n    <span class=hljs-comment>// Some browsers just don\'t implement it - return a rejected promise with an error</span>\n    <span class=hljs-comment>// to keep a consistent interface</span>\n    <span class=hljs-keyword>if</span> (!getUserMedia) {\n      <span class=hljs-keyword>return</span> <span class=hljs-built_in>Promise</span>.reject(<span class=hljs-keyword>new</span> <span class=hljs-built_in>Error</span>(<span class=hljs-string>\'getUserMedia is not implemented in this browser\'</span>));\n    }\n\n    <span class=hljs-comment>// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise</span>\n    <span class=hljs-keyword>return</span> <span class=hljs-keyword>new</span> <span class=hljs-built_in>Promise</span>(<span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>resolve, reject</span>) </span>{\n      getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  }\n}\n\nnavigator.mediaDevices.getUserMedia({ <span class=hljs-attr>audio</span>: <span class=hljs-literal>true</span>, <span class=hljs-attr>video</span>: <span class=hljs-literal>true</span> })\n.then(<span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>stream</span>) </span>{\n  <span class=hljs-keyword>var</span> video = <span class=hljs-built_in>document</span>.querySelector(<span class=hljs-string>\'video\'</span>);\n  <span class=hljs-comment>// Older browsers may not have srcObject</span>\n  <span class=hljs-keyword>if</span> (<span class=hljs-string>"srcObject"</span> <span class=hljs-keyword>in</span> video) {\n    video.srcObject = stream;\n  } <span class=hljs-keyword>else</span> {\n    <span class=hljs-comment>// Avoid using this in new browsers, as it is going away.</span>\n    video.src = <span class=hljs-built_in>window</span>.URL.createObjectURL(stream);\n  }\n  video.onloadedmetadata = <span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>e</span>) </span>{\n    video.play();\n  };\n})\n.catch(<span class=hljs-function><span class=hljs-keyword>function</span>(<span class=hljs-params>err</span>) </span>{\n  <span class=hljs-built_in>console</span>.log(err.name + <span class=hljs-string>": "</span> + err.message);\n});\n</code></pre><h3 id=->兼容情况</h3> <p><img src='+n("./app/data/blogs/get-user-media/can-i-use.png")+' alt=""></p> '},"./app/data/blogs/get-user-media/can-i-use.png":function(s,a,n){s.exports=n.p+"2d34a128a3981a56a94e8d1429116203.png"}}]);