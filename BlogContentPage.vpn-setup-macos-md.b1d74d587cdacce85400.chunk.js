(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"8d3fc2d9fbb28b1eb47e":function(s,n){s.exports="<h2 id=\u4e3amacos\u914d\u7f6evpn>\u4e3amacOS\u914d\u7f6eVPN</h2> <h3 id=\u914d\u7f6evpn\u670d\u52a1\u5668>\u914d\u7f6eVPN\u670d\u52a1\u5668</h3> <p>\u642d\u5efavpn\u670d\u52a1</p> <p>\u4ece\u7cfb\u7edf\u4ed3\u5e93 \u5b89\u88c5<code>ipsec</code> \u5b89\u88c5<code>xl2tpd</code></p> <p>\u5728\u670d\u52a1\u5668\u4e0a\u542f\u52a8\u670d\u52a1</p> <p>\u914d\u7f6e\u597d\u670d\u52a1\u8d26\u6237</p> <pre class=hljs><code class=language->systemctl restart<span class=hljs-built_in> ipsec\n</span>systemctl restart xl2tpd</code></pre><h3 id=\u914d\u7f6evpn-client>\u914d\u7f6eVPN Client</h3> <p>\u4ece<code>Mac App Store</code>\u5b89\u88c5<code>Apple Configurator 2</code></p> <p>\u521b\u5efaVPN\u63cf\u8ff0\u6587\u4ef6</p> <p>\u9009\u62e9<code>l2tp</code>\u534f\u8bae \u914d\u7f6e<em>\u670d\u52a1\u5668\u5730\u5740\u3001\u7528\u6237\u540d\u3001\u5bc6\u7801\u548c\u5171\u4eab\u5bc6\u94a5</em></p> <p>\u628a\u63cf\u8ff0\u6587\u4ef6\u5b89\u88c5\u5230<code>macOS</code>\u7684\u7cfb\u7edf\u914d\u7f6e\uff0c<code>iOS</code>\u901a\u8fc7<code>airDrop</code>\u5b89\u88c5</p> <p>\u5b89\u88c5\u5b8c\u6210\u5373\u53ef\u8fde\u63a5vpn</p> <h3 id=\u914d\u7f6emacos\u5728vpn\u8fde\u63a5\u65f6\u7684\u8def\u7531\u8868>\u914d\u7f6emacOS\u5728VPN\u8fde\u63a5\u65f6\u7684\u8def\u7531\u8868</h3> <p>\u4f7f\u7528<code>[static-routes][https://github.com/gsmlg/static-routes]</code>\u7684\u914d\u7f6e</p> <p>\u8def\u7531\u8868\u6570\u636e\u65f6\u4f7f\u7528maxmine\u516c\u5f00\u7684geoip\u6570\u636e\u5e93\u6765\u8fdb\u884c\u914d\u7f6e</p> <p>\u5728<code>/etc/ppp/</code>\u76ee\u5f55\u914d\u7f6e<code>ip-up</code>,<code>ip-down</code>\u5bf9\u5e94\u5728VPN\u542f\u52a8\u548c\u505c\u6b62\u65f6\u6267\u884c\u5bf9\u5e94\u811a\u672c</p> <p>\u811a\u672c\u4e2d\u53ef\u4ee5\u4f7f\u7528\u53d8\u91cf\u8bf4\u660e</p> <pre class=hljs><code class=language-><span class=hljs-variable>$1</span><span class=hljs-built_in> interface </span>etc: ppp0\n<span class=hljs-variable>$2</span> none?\n<span class=hljs-variable>$3</span> ? 0\n<span class=hljs-variable>$4</span><span class=hljs-built_in> client ip\n</span><span class=hljs-variable>$5</span> remote<span class=hljs-built_in> ip\n</span><span class=hljs-variable>$6</span> local gateway</code></pre><h3 id=\u547d\u4ee4\u884c\u4e2d\u63a7\u5236vpn>\u547d\u4ee4\u884c\u4e2d\u63a7\u5236VPN</h3> <pre class=hljs><code class=language->VPN connections\n\nUsage: scutil --nc [command]\n\n    list\n        List available<span class=hljs-built_in> network connection </span>services <span class=hljs-keyword>in</span> the current <span class=hljs-builtin-name>set</span>\n\n    status &lt;service&gt;\n        Indicate whether a given<span class=hljs-built_in> service </span>is connected, as well as extended status information <span class=hljs-keyword>for</span> the<span class=hljs-built_in> service\n</span>\n    show &lt;service&gt;\n        Display configuration information <span class=hljs-keyword>for</span> a given<span class=hljs-built_in> service\n</span>\n    statistics &lt;service&gt;\n        Provide statistics on bytes, packets, <span class=hljs-keyword>and</span> errors <span class=hljs-keyword>for</span> a given<span class=hljs-built_in> service\n</span>\n    select &lt;service&gt;\n        Make the given<span class=hljs-built_in> service </span>active <span class=hljs-keyword>in</span> the current set. This allows it <span class=hljs-keyword>to</span> be started\n\n    start &lt;service&gt; [--user user] [--password password] [--secret secret]\n        Start a given service. Can take optional arguments <span class=hljs-keyword>for</span> user, password, <span class=hljs-keyword>and</span><span class=hljs-built_in> secret\n</span>\n    stop &lt;service&gt;\n        Stop a given<span class=hljs-built_in> service\n</span>\n    suspend &lt;service&gt;\n        Suspend a given<span class=hljs-built_in> service </span>(PPP, Modem on Hold)\n\n    resume &lt;service&gt;\n        Resume a given<span class=hljs-built_in> service </span>(PPP, Modem on Hold)\n\n    ondemand [-W] [hostname]\n    ondemand -- --refresh\n        Display VPN on-demand information\n\n    trigger &lt;hostname&gt; [background] [port]\n        Trigger VPN on-demand with specified hostname, <span class=hljs-keyword>and</span> optional<span class=hljs-built_in> port </span><span class=hljs-keyword>and</span> background flag\n\n    enablevpn &lt;service <span class=hljs-keyword>or</span> vpn type&gt; [path]\n        Enables the given VPN application type. Takes either a<span class=hljs-built_in> service </span><span class=hljs-keyword>or</span> VPN type. Pass a path <span class=hljs-keyword>to</span> <span class=hljs-builtin-name>set</span> ApplicationURL\n\n    disablevpn &lt;service <span class=hljs-keyword>or</span> vpn type&gt;\n        Disables the given VPN application type. Takes either a<span class=hljs-built_in> service </span><span class=hljs-keyword>or</span> VPN<span class=hljs-built_in> type\n</span>\n    help\n        Display available commands <span class=hljs-keyword>for</span> --nc\n</code></pre>"}}]);