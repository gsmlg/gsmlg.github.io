(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{"3c54d1fa4ea193392a17":function(s,e,a){"use strict";a.r(e),e.default=a.p+"49af0759a244c35e093451d79fb2468a.png"},"8274a079cfbf6b50f6b9":function(s,e,a){var n="<h3 id=\u95ee\u9898\u51fa\u73b0>\u95ee\u9898\u51fa\u73b0</h3> <p>\u5f00\u53d1\u53cd\u9988\u9519\u8bef\u65f6\u95f4\u8fc7\u957f</p> <p>\u53d1\u73b0\u6240\u6709\u9519\u8bef\u8bf7\u6c42\u90fd\u88ab\u53d1\u9001\u4e86\u4e24\u6b21\uff0c\u60c5\u51b5\u662f</p> <ul> <li><p>\u6d4f\u89c8\u5668\u4e2d\u53d1\u73b0\u53ea\u6709\u4e00\u6b21\u8bf7\u6c42</p> </li> <li><p>\u670d\u52a1\u5668\u4e0a\u53d1\u73b0\u6709\u4e24\u6761\u8bf7\u6c42\u65e5\u5fd7</p> </li> </ul> <h3 id=\u6392\u67e5\u8fc7\u7a0b>\u6392\u67e5\u8fc7\u7a0b</h3> <p>\u9996\u5148\u4e3a\u4e50\u786e\u8ba4\u95ee\u9898\u662f\u5728nginx\u8f6c\u53d1\u65f6\u53d1\u751f\u7684\uff0c\u8fd8\u662f\u7531\u6d4f\u89c8\u5668\u53d1\u9001\u7684</p> <p>\u53ea\u80fd\u4f7f\u7528\u6293\u5305\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u67e5\uff0c\u91cd\u65b0\u4fee\u6539\u4e86\u670d\u52a1\u5668\uff0c\u5173\u95ed\u4e86https</p> <p>\u4f7f\u7528wireshark\u8fdb\u884c\u6293\u5305</p> <pre class=hljs><code class=language-auto>ip == <span class=hljs-number>10.1</span><span class=hljs-number>.108</span><span class=hljs-number>.31</span> &amp;&amp; ip.port = <span class=hljs-number>80</span> &amp;&amp; http</code></pre><p>\u68c0\u67e5\u53d1\u73b0\u662f\u7531\u6d4f\u89c8\u5668\u53d1\u9001\u4e86\u4e24\u6b21\u8bf7\u6c42</p> <p>\u5206\u522b\u4f7f\u7528\u4e86\u4e0d\u540c\u6d4f\u89c8\u5668\u6d4b\u8bd5\uff1a</p> <ul> <li>Firefox \u4e24\u6b21</li> <li>Chrome \u4e24\u6b21</li> <li>Safari \u6b63\u5e38</li> <li>IE \u6b63\u5e38</li> </ul> <p>\u68c0\u67e5\u4e86\u8bf7\u6c42\u548c\u54cd\u5e94</p> <p>\u67e5\u770bchrome\u7f51\u7edcwaterfall</p> <p><img src="+a("302492d1afd5e0e000f5")(a("3c54d1fa4ea193392a17"))+' alt=""></p> <p>\u67e5\u770b\u53d1\u73b0\uff0c\u65f6\u95f4\u663e\u793astalled\u65f6\u6709\u4e00\u6b21\u8bf7\u6c42</p> <p>\u4e4b\u540ewalting\u65f6\u95f4\u6bb5\u662f\u91cd\u8bd5\u7684\u8bf7\u6c42</p> <p>\u6d4b\u8bd5\u4e86\u662f\u5426\u662fkeepalive\u7684\u539f\u56e0\uff0c<code>nginx.conf</code>\u8bbe\u7f6e\uff1a</p> <pre class=hljs><code class=language-nginx><span class=hljs-attribute>keepalive_timeoute</span> <span class=hljs-number>0</span>;</code></pre><p>\u6392\u9664\u539f\u56e0</p> <p>\u4f7f\u7528\u4e86<a href=https://github.com/gsmlg/echo><code>echo</code></a>\u670d\u52a1\u8fdb\u884c\u6d4b\u8bd5</p> <p>\u901a\u8fc7\u6d4b\u8bd5\u53d1\u73b0\uff0c\u5f53\u670d\u52a1\u5668\u54cd\u5e94421\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u590d\u5236\u8bf7\u6c42\u5e76\u518d\u6b21\u8bf7\u6c42\u670d\u52a1\u5668</p> <h3 id=\u539f\u56e0>\u539f\u56e0</h3> <p>\u67e5\u770b\u4e86 <code>http status code 421</code> \u8bf4\u660e</p> <pre class=hljs><code class="language-undefined">  <span class=hljs-number>421</span> Misdirected Request \uff08RFC <span class=hljs-number>7540</span>\uff09\n    \u8be5\u8bf7\u6c42\u9488\u5bf9\u7684\u662f\u65e0\u6cd5\u4ea7\u751f\u54cd\u5e94\u7684\u670d\u52a1\u5668\uff08\u4f8b\u5982\u56e0\u4e3a\u8fde\u63a5\u91cd\u7528\uff09\u3002</code></pre><p>RFC 7540 Hypertext Transfer Protocol Version 2 (HTTP/2) <a href=https://tools.ietf.org/html/rfc7540>\u94fe\u63a5</a></p> <p>\u6307\u5b9a\u8bf4\u660e<a href=https://tools.ietf.org/html/rfc7540#section-9.1.2>Section</a></p> <pre class=hljs><code class="language-undefined">  9.1.2.  The 421 (Misdirected Request) Status Code\n\n  The 421 (Misdirected Request) status code indicates that the request\n  was directed at a<span class=hljs-built_in> server </span>that is <span class=hljs-keyword>not</span> able <span class=hljs-keyword>to</span> produce a response.\n  This can be sent by a<span class=hljs-built_in> server </span>that is <span class=hljs-keyword>not</span> configured <span class=hljs-keyword>to</span> produce\n  responses <span class=hljs-keyword>for</span> the combination of scheme <span class=hljs-keyword>and</span> authority that are\n  included <span class=hljs-keyword>in</span> the request URI.\n\n  Clients receiving a 421 (Misdirected Request) response <span class=hljs-keyword>from</span> a<span class=hljs-built_in> server\n</span>  MAY retry the request -- whether the request method is idempotent <span class=hljs-keyword>or</span>\n  <span class=hljs-keyword>not</span> -- over a different connection.  This is possible <span class=hljs-keyword>if</span> a<span class=hljs-built_in> connection\n</span>  is reused (Section 9.1.1) <span class=hljs-keyword>or</span> <span class=hljs-keyword>if</span> an alternative<span class=hljs-built_in> service </span>is selected\n  [ALT-SVC].\n\n  This status code MUST <span class=hljs-keyword>NOT</span> be generated by proxies.\n\n  A 421 response is cacheable by default, i.e., unless otherwise\n  indicated by the method definition <span class=hljs-keyword>or</span> explicit cache controls (see\n  Section 4.2.2 of [RFC7234]).</code></pre><h4 id=\u786e\u5b9a\u539f\u56e0>\u786e\u5b9a\u539f\u56e0</h4> <p>http2\u4e2d\u5b9a\u4e49\u4e86421\u9519\u8bef</p> <h5 id=421\u9519\u8bef\u7528\u4e8e\u5728http2\u4e2d\uff0c\u5728http2\u590d\u7528\u8fde\u63a5\u65f6\uff0c\u53d1\u73b0\u8fde\u63a5\u5230\u7684\u670d\u52a1\u5668\u4e0d\u6b63\u786e\uff0c\u5219\u4f1a\u7531\u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94\u7801421\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u540e\u4f1a\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u5e76\u4e14\u53d1\u9001\u76f8\u540c\u7684\u8bf7\u6c42>421\u9519\u8bef\u7528\u4e8e\u5728http2\u4e2d\uff0c\u5728http2\u590d\u7528\u8fde\u63a5\u65f6\uff0c\u53d1\u73b0\u8fde\u63a5\u5230\u7684\u670d\u52a1\u5668\u4e0d\u6b63\u786e\uff0c\u5219\u4f1a\u7531\u670d\u52a1\u5668\u8fd4\u56de\u54cd\u5e94\u7801421\uff0c\u5ba2\u6237\u7aef\u6536\u5230\u540e\u4f1a\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u5e76\u4e14\u53d1\u9001\u76f8\u540c\u7684\u8bf7\u6c42</h5> <h3 id=\u89e3\u51b3\u65b9\u5f0f>\u89e3\u51b3\u65b9\u5f0f</h3> <p>\u4f7f\u7528\u901a\u7528\u7684\u9519\u8bef\u54cd\u5e94\u7801<code>403</code>\u5373\u53ef\u89e3\u51b3\u95ee\u9898</p> ';s.exports=n}}]);