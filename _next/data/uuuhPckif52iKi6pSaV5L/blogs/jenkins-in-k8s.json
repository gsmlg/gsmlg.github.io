{"pageProps":{"slug":"jenkins-in-k8s","blog":{"author":"Gao","content":"## 在 Kubernetes 中安装 jenkins\n\n### 简介\n\n在 kubernetes 中安装 Jenkins Jenkins 会以 master 方式运行，当有 build 任务时，会\n在 kubernetes 中启动一个 pod 来运行对应的构建任务需要配置对应的 pod 来解决常规的\n构建问题\n\n### 安装 Jeknis 到 Kubernetes：\n\n    使用仓库 https://github.com/gsmlg/jenkins 中的配置\n\n1. 配置 Deployment 使用 deployment.yaml\n\n```\nkubectl create -f deployment.yaml\n```\n\n2. 配置 service.yaml 使用 service.yaml\n\n```\nkubectl create -f service.yaml\n```\n\n3. 手动添加 ingress 配置使用`rancher`配置 ingress 服务\n\n### 对 jenkins 进行配置\n\n1. 在 configure global security 中可以配置用户，用于登陆管理\n\n2. 配置连接 kubernetes 的权限\n\n   - 在 configure system 中，配置\n\n添加 cloud 配置\n\n- 配置 `kubernetes URL` 为 `API server` 的地址\n\n- 在 `Credentials` 配置上配置 `kubeconfig`\n\n- 添加`Jenkins tunnel` 地址，地址为`service`配置中的 `jenkins-jnlp` 的地址\n\n- 配置`Kubenetes Pod Template`， `labels` 配置用于`slave`启动时添加的配置\n\n- 配置`contaienr`参照需求配置\n\n  记录下配置的 Labels\n\n  删除 command to run， Arguments to pass to the command 配置\n\n  dind 配置需要添加 volume 映射 docker.sock\n\n        contaienr镜像当前需要自己配置，目前已经做了两个镜像\n        - gsmlg/jenkins-slave-jnlp-dind\n        - gsmlg/jenkins-slave-jnlp-nodejs\n\n### 配置项目\n\n添加`project`的时候\n\n- 通过 `Label Expression` 来确定使用哪一个`Pod template` 来启动 `slave`\n\n- `Source Code Management` 配置 git 项目地址\n\n- `branches to build` 指定那些分支会进行构建\n\n- `Build Triggers` 中指定自动出发 build 的触发器\n\n- `Build Environment` 指定 Build 终端输出颜色\n\n- `Build` 指定 build 命令，可以分阶段执行\n\n- `Post build` build 完成后的动作\n\n## Comment\n\n- jnlp - Java Network Launch Protocol\n  [Link](https://docs.oracle.com/javase/tutorial/deployment/deploymentInDepth/jnlp.html)\n","date":"2019-11-24","id":28,"slug":"jenkins-in-k8s","title":"Jenkins in Kubernetes"}},"__N_SSG":true}