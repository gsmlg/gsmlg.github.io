{"pageProps":{"slug":"use-macro-in-elixir","blog":{"author":"Gao","content":"使用了HTTPoison来创建一个http请求代理后, 当前有一个问题.处理http请求响应有太多的重复代码, 所以需要一个方式来优化重复问题.\n\n这里, 尝试了之前很少使用的macro来解决.\n\n## 关于macro\n\nElixir是基于beam上的语言, 语言上很多的statement实际上都是macro, 比如基本的if,else\n\n在Elixir中,允许直接创建和访问`abstract syntax tree` (`AST`), 可以使用 `quota` and `unquota`来操作\n\n简单示例\n\n```elixir\niex> denominator = 2\n2\niex> quote do: divide(42, denominator)\n{:divide, [], [42, {:denominator, [], Elixir}]}\niex> quote do: divide(42, unquote(denominator))\n{:divide, [], [42, 2]}\n```\n\n简单示例, 如何使用macro\n```elixir\ndefmodule Logger do\n  defmacro log(msg) do\n    if Application.get_env(:logger, :enabled) do\n      quote do\n        IO.puts(\"Logged message: #{unquote(msg)}\")\n      end\n    end\n  end\nend\n\ndefmodule Example do\n  require Logger\n\n  def test do\n    Logger.log(\"This is a log message\")\n  end\nend\n```\n\n**解释**: \n\n这里使用宏是因为macro是在编译时展开的, 如果配置没有启用loger, 则不会展开对应macro, 程序中就不会有对应代码.\n\n## 使用macro来处理HTTPoison的response请求\n\n代码\n\n```elixir\n  @spec process_result(HTTPoison.Response.t(), String.t()) :: {:ok, t} | {:error, t}\n  defmacro process_result(result) do\n    quote do\n      case unquote(result) do\n        {:ok,\n         %HTTPoison.Response{\n           body: data,\n           status_code: status_code,\n           request: %HTTPoison.Request{url: request_url}\n         }}\n        when status_code >= 200 and status_code < 300 ->\n          IO.inspect({\"Access Success\", status_code, request_url})\n          {:ok, data}\n\n        {:ok,\n         %HTTPoison.Response{\n           body: data,\n           status_code: 401,\n           request: %HTTPoison.Request{url: request_url}\n         }} ->\n          IO.inspect({\"Unauthorized Error\", 401, request_url})\n          {:error, data}\n\n        {:ok,\n         %HTTPoison.Response{\n           body: body,\n           status_code: status_code,\n           request: %HTTPoison.Request{url: request_url}\n         }}\n        when status_code >= 400 and status_code < 500 ->\n          IO.inspect({\"Client Error\", status_code, request_url, body})\n          {:error, body}\n\n        {:ok,\n         %HTTPoison.Response{\n           body: body,\n           status_code: status_code,\n           request: %HTTPoison.Request{url: request_url}\n         }}\n        when status_code >= 500 ->\n          IO.inspect({\"Server Error\", status_code, request_url, body})\n          {:error, body}\n\n        {:error, %HTTPoison.Error{reason: reason} = error} ->\n          IO.inspect({\"HTTPoison.Error\", error})\n          {:error, reason}\n\n      end\n    end\n  end\n\n```\n\n简单的来处理HTTPoison的Reponse, 添加对应处理逻辑\n\n","date":"2022-12-05","id":84,"slug":"use-macro-in-elixir","title":"Use macro in Elixir's HTTPoison"},"lightCss":"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{color:#383a42;background:#fafafa}.hljs-comment,.hljs-quote{color:#a0a1a7;font-style:italic}.hljs-doctag,.hljs-formula,.hljs-keyword{color:#a626a4}.hljs-deletion,.hljs-name,.hljs-section,.hljs-selector-tag,.hljs-subst{color:#e45649}.hljs-literal{color:#0184bb}.hljs-addition,.hljs-attribute,.hljs-meta .hljs-string,.hljs-regexp,.hljs-string{color:#50a14f}.hljs-attr,.hljs-number,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-pseudo,.hljs-template-variable,.hljs-type,.hljs-variable{color:#986801}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-symbol,.hljs-title{color:#4078f2}.hljs-built_in,.hljs-class .hljs-title,.hljs-title.class_{color:#c18401}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}.hljs-link{text-decoration:underline}","darkCss":"pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{color:#abb2bf;background:#282c34}.hljs-comment,.hljs-quote{color:#5c6370;font-style:italic}.hljs-doctag,.hljs-formula,.hljs-keyword{color:#c678dd}.hljs-deletion,.hljs-name,.hljs-section,.hljs-selector-tag,.hljs-subst{color:#e06c75}.hljs-literal{color:#56b6c2}.hljs-addition,.hljs-attribute,.hljs-meta .hljs-string,.hljs-regexp,.hljs-string{color:#98c379}.hljs-attr,.hljs-number,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-pseudo,.hljs-template-variable,.hljs-type,.hljs-variable{color:#d19a66}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-symbol,.hljs-title{color:#61aeee}.hljs-built_in,.hljs-class .hljs-title,.hljs-title.class_{color:#e6c07b}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}.hljs-link{text-decoration:underline}"},"__N_SSG":true}