{"pageProps":{"slug":"move-alias-from-webpack-to-babel","blog":{"id":35,"name":"move-alias-from-webpack-to-babel","title":"使用Babel的来代替webpack别名","date":"2020-04-09","author":"Gao","content":"昨天给项目添加单元测试，发现`import`有大量的 missing\n\n检查返现问题：\n\n1. webpack 中有大量的`alias`导致\n2. webpack 中有`define plugin`，导致全局变量丢失\n3. webpack 中有`provide plugin`，导致一些没有被引入的变量出错\n\n进过一番调研，决定使用如下解决方式：\n\n使用 Babel 的 module resolver plugin 来处理这个问题\n\n所以，对整个项目做了一些调整\n\n将原先的`.babelrc`文件更换为`babel.config.js`\n\n添加 babel 插件`babel-plugin-module-resolver`,并将原先的 webpack 别名修改过来\n\n删除了 webpack 的 alias，添加了如下内容到 babel.config.js，由于路径会和 webpack 相互交互，为了方便处理，所以使用了绝对路径\n\n```js\nplugins: [\n  [\n    'module-resolver',\n    {\n      root: [rootPath, path.join(rootPath, '/assets/javascripts')],\n      alias: {\n        plugins: path.join(zddiRoot, 'zddi/common/plugins'),\n        eve: path.join(zddiRoot, 'zddi/common/plugins/eve-raphael'),\n        raphael: path.join(zddiRoot, 'zddi/common/plugins/raphael/raphael.amd'),\n        i18n: `${zddiRoot}/i18n/i18n-data`,\n        common: path.join(zddiRoot, 'zddi/common'),\n        models: path.join(zddiRoot, 'zddi/common/models'),\n        views: path.join(zddiRoot, 'zddi/common/views'),\n        controller: path.join(zddiRoot, 'zddi/common/controller'),\n        utils: path.join(zddiRoot, 'zddi/common/utils'),\n        dashboard: path.join(zddiRoot, 'zddi/dashboard'),\n        address: path.join(zddiRoot, 'zddi/address'),\n        cloud: path.join(zddiRoot, 'zddi/cloud'),\n        am: path.join(zddiRoot, 'zddi/am'),\n        dns: path.join(zddiRoot, 'zddi/dns'),\n        secure: path.join(zddiRoot, 'zddi/secure'),\n        system: path.join(zddiRoot, 'zddi/system'),\n        jquery: path.join(zddiRoot, 'zddi/common/plugins/jquery'),\n        cell: path.join(zddiRoot, 'zddi/common/components/table/index'),\n      },\n    },\n  ],\n];\n```\n\n修改完成后发现问题，原先的 define plugin 的导入出了错误。\n原因是由于 template loader 没有用 babel 处理导致的，为了方便，我改了 provide plugin 的引入点，做了路径指向\n\n提交时发现问题，eslint 无法通过\n\n于是做了修改，增加了两个插件\n\n- `eslint-plugin-jest`\n- `eslint-import-resolver-babel-module`\n\n修改配置后支持 jest 全局变量和使用 babel module resolver 来检查当前的包含关系\n"}},"__N_SSG":true}