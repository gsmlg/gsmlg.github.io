{"pageProps":{"slug":"prow","blog":{"author":"Gao","content":"# prow\n\n![prow](./prow/logo_horizontal_solid.png)\n\nProw 是基于 Kubernetes 开发的 CI/CD 系统\n\nJobs 可以由多种类型的事件出发，并且报告状态给不同的服务。除了 Job 执行外，Prow\n还提供了 Github 自动化执行策略，`/foo`格式的命令的 chat-ops 和自动 PR 合并\n\n### Functions and Features\n\n- 用于测试，批处理和产品发布的 Job 运行\n- 基于`/foo`格式的可扩展 Github bot 命令，强化配置策略和进程\n- 带有批量测试的 Github 自动合并\n- 用于查看 Job，合并队列状态，动态生成的帮助信息的前端界面\n- 基于 SCM 的自动部署\n- 在 SCM 中自动管理 Github 的 org/repo\n- 专为拥有大量仓库的多组织设计（Prow 只需要一个 Github bot token）\n- 在 Kubernetes 上运行带来的高可用性\n- JSON 结构日志\n- Prometheus metrics\n\n### Who use Prow\n\nProw is used by the following organizations and projects:\n\n- [Kubernetes](https://prow.k8s.io)\n  - This includes [kubernetes](https://github.com/kubernetes),\n    [kubernetes-client](https://github.com/kubernetes-client),\n    [kubernetes-csi](https://github.com/kubernetes-csi),\n    [kubernetes-incubator](https://github.com/kubernetes-incubator), and\n    [kubernetes-sigs](https://github.com/kubernetes-sigs).\n- [OpenShift](https://prow.svc.ci.openshift.org/)\n  - This includes [openshift](https://github.com/openshift),\n    [openshift-s2i](https://github.com/openshift-s2i),\n    [operator-framework](https://github.com/operator-framework), and some repos\n    in [kubernetes-incubator](https://github.com/kubernetes-incubator),\n    [containers](https://github.com/containers) and\n    [heketi](https://github.com/heketi).\n- [Istio](https://prow.istio.io/)\n- [Knative](https://prow.knative.dev/)\n- [Jetstack](https://prow.build-infra.jetstack.net/)\n- [Kyma](https://status.build.kyma-project.io/)\n- [Metal³](https://prow.apps.ci.metal3.io/)\n- [Prometheus](http://prombench.prometheus.io/)\n- [Caicloud](https://github.com/caicloud)\n- [Kubeflow](https://github.com/kubeflow)\n- [Azure AKS Engine](https://github.com/Azure/aks-engine/tree/master/.prowci)\n- [tensorflow/minigo](https://github.com/tensorflow/minigo#automated-tests)\n- [helm/charts](https://github.com/helm/charts)\n- [Daisy(google compute image tools)](https://github.com/GoogleCloudPlatform/compute-image-tools/tree/master/test-infra#prow-and-gubenator)\n- [KubeEdge (Kubernetes Native Edge Computing Framework)](https://github.com/kubeedge/kubeedge)\n- [Volcano (Kubernetes Native Batch System)](https://github.com/volcano-sh/volcano)\n- [Loodse](https://public-prow.loodse.com/)\n\n[Jenkins X](https://jenkins-x.io/) uses\n[Prow as part of Serverless Jenkins](https://medium.com/@jdrawlings/serverless-jenkins-with-jenkins-x-9134cbfe6870).\n\n### 部署 Prow\n\n#### 创建 Github bot 账号\n\n配置账户的 `personal access token`\n\n- Must have the `public_repo` and `repo:status` scopes\n- Add the `repo` scope if you plan on handing private repos\n- Add the `admin_org:hook` scope if you plan on handling a github org\n\n##### 创建 Github secrets\n\n1. 创建 `hmac-token` 用于 Github webhooks 的认证\n\n```bash\n# openssl rand -hex 20 > /path/to/hook/secret\nkubectl create secret generic hmac-token --from-file=hmac=/path/to/hook/secret\n```\n\n2. 创建 Github OAuth2 token\n\n```bash\n# https://github.com/settings/tokens\nkubectl create secret generic oauth-token --from-file=oauth=/path/to/oauth/secret\n```\n\n#### 安装`prow`到集群\n\n```\nkubectl apply -f https://github.com/gsmlg/pipeline/raw/master/updated_prow.yaml\n```\n\n默认会安装到 default namesapce 下，Job 运行在 test-pods namsapces 下\n\n通过命令查看是否安装完成\n\n```\n# kubectl get deployments\nNAME               READY   UP-TO-DATE   AVAILABLE   AGE\ndeck               2/2     2            2           21h\nhook               2/2     2            2           21h\nhorologium         1/1     1            1           21h\nplank              1/1     1            1           21h\nsinker             1/1     1            1           21h\nstatusreconciler   1/1     1            1           21h\ntide               1/1     1            1           21h\n```\n\n配置 ingress\n\n```\n# 查看ingress\nkubectl get ingress ing\n\n# 编辑ingress\nkubectl edit ingress ing\n\n```\n\n#### 创建 webhook\n\n配置 ingress，default/ing\n\n设置好 ingress 域名\n\n打开 github repo 的 setting 页面设置 webook，URL 设置为 ingress-domain/hook,\nsecret 为 webook 创建的 secret\n\n这样一个 prow 集群配置完成\n\n### 添加 plugins\n\n增加 configmap plugins\n\n内容为：\n\n```yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: plugins\n  namespace: default\ndata:\n  plugins.yaml: |\n    plugins:\n      ORG/PROJECT:\n      - size\n```\n\n会自动在 pull-request 上添加一个 size 标签\n","date":"2020-01-05","id":30,"slug":"prow","title":"Prow"}},"__N_SSG":true}