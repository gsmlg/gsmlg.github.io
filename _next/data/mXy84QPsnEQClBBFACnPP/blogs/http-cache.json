{"pageProps":{"slug":"http-cache","blog":{"id":23,"name":"http-cache","title":"HTTP缓存控制","date":"2018-08-08","author":"Gao","content":"# HTTP 缓存控制\n\nHTTP 协议是 WWW 的通讯协议，用于处理互联网上成百上千的应用请求\n\nHTTP 中的缓存是非常重要的，线上服务可以处理成千上万的请求，很大程度上，都依赖缓\n存\n\nHTTP 协议中定义了在 HTTP 请求中如何缓存数据\n\n## Expires 响应头\n\n指定内容缓存失效时间\n\n```\n# Expires: <http-date>\n# Exampale\nExpires: Wed, 21 Oct 2015 07:28:00 GMT\n```\n\n表明缓存可以保存的时间，如果当前时间早于这个时间，那么可以使用缓存的副本，可以不\n向服务器再次请求\n\n## Cache-Control 响应头\n\n### `max-age`\n\n指定缓存生存时间\n\n示例：\n\n```\nCache-Control: max-age=3600\n```\n\n表示当收到响应后，在 3600 秒内，如果再次请求数据，可以使用缓存的副本，不需要再次\n向服务器请求数据\n\n### `public`\n\n表示这是一个开放资源，可以进行缓存\n\n### `private`\n\n表示这是一个私有资源，代理服务器不得缓存\n\n### `must-revalidate`\n\n当发生请求时，必须向服务器再次验证数据\n\n## 验证数据相关响应头\n\n### `Etag`\n\n用于验证当前数据的内容版本的标示符\n\n这可以让缓存更高效，并节省带宽，因为如果内容没有改变，Web 服务器不需要发送完整的\n响应。而如果内容发生了变化，使用 ETag 有助于防止资源的同时更新相互覆盖（“空中碰\n撞”）。\n\n如果给定 URL 中的资源更改，则一定要生成新的 Etag 值。 因此 Etags 类似于指纹，也\n可能被某些服务器用于跟踪。 比较 etags 能快速确定此资源是否变化，但也可能被跟踪服\n务器永久存留。\n\n```\nETag: W/\"<etag_value>\"\nETag: \"<etag_value>\"\n```\n\n- /W 'W/'(大小写敏感) 表示使用弱验证器。 弱验证器很容易生成，但不利于比较。 强验\n  证器是比较的理想选择，但很难有效地生成。 相同资源的两个弱 Etag 值可能语义等同\n  ，但不是每个字节都相同。\n\n- \"<etag_value>\" 实体标签唯一地表示所请求的资源。 它们是位于双引号之间的 ASCII\n  字符串（如“675af34563dc-tr34”）。\n\n#### 避免“空中碰撞”\n\n在 `ETag` 和 `If-Match` 头部的帮助下，可以检测到\"空中碰撞\"的编辑冲突。\n\n在 `POST` 请求头中包含 `If-Match` 头来检查是否最新版本。\n\n```\nIf-Match: \"33a64df551\"\n```\n\n如果哈希值不匹配，则发送 412 前提条件失败错误\n\n#### 缓存未更改的资源\n\n当用户再次请求对应资源时，会携带`if-none-match`头来\n\n```\nIf-None-Match: \"33a64df551\"\n```\n\n服务器收到后，检查是否和当前`etag`匹配，如果相同，则发送 304 响应，不包含任何内\n容，标示客户端可以使用缓存数据\n\n### `last-modified`\n\n包含源头服务器认定的资源做出修改的日期及时间。\n\n它通常被用作一个验证器来判断接收到的或者存储的资源是否彼此一致。由于精确度比\n`ETag` 要低，所以这是一个备用机制。\n\n```\nLast-Modified: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n```\n\n- `<day-name>` \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" 或 \"Sun\" 之一 （区分大小\n  写）。\n- `<day>` 两位数字表示的天数, 例如\"04\" or \"23\"。\n- `<month>` \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\",\n  \"Oct\", \"Nov\", \"Dec\" 之一（区分大小写）。\n- `<year>` 4 位数字表示的年份, 例如 \"1990\" 或者\"2016\"。\n- `<hour>` 两位数字表示的小时数, 例如 \"09\" 或者 \"23\"。\n- `<minute>` 两位数字表示的分钟数，例如\"04\" 或者 \"59\"。\n- `<second>` 两位数字表示的秒数，例如 \"04\" 或者 \"59\"。\n- `GMT` 国际标准时间。HTTP 中的时间均用国际标准时间表示，从来不使用当地时间。\n\n#### 避免“空中碰撞”\n\n在 `Last-Modified` 和 `If-Unmodified-Since` 头部的帮助下，可以检测到\"空中碰撞\"的\n编辑冲突。\n\n在 `POST` 请求头中包含 `If-Unmodified-Since` 头来检查是否最新版本。\n\n```\nIf-Unmodified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n```\n\n如果请求资源在时间之后做了修改，则返回 412 前提条件失败错误\n\n#### 缓存未更改的资源\n\n当用户再次请求对应资源时，会携带`If-Modified-Since`头来匹配资源，如果在给定日期\n后做了修改，则需要正常响应\n\n```\nIf-Modified-Since: <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\n```\n\n服务器收到后，检查是否和当前`If-Modified-Since`时间，如果在给定日期后没有修改，\n则发送 304 响应，不包含任何内容，标示客户端可以使用缓存数据\n"}},"__N_SSG":true}