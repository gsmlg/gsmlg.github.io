(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"1903807f62c23652f99e":function(s,a,l){"use strict";l.r(a),a.default=l.p+"684e34fb9150a199081a8541a05204b0.jpg"},d27222405a0bfe514065:function(s,a,l){var n='<h2 id=\u5982\u4f55\u505c\u6b62erlang-vm>\u5982\u4f55\u505c\u6b62erlang VM</h2> <p>\u5f53\u4f60\u9700\u8981\u505c\u6b62\u4e00\u4e2aErlang VM\u7684\u65f6\u5019\uff0c\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u600e\u4e48\u505a\uff1f \u8fd9\u91cc\u670910\u79cd\u65b9\u5f0f\u4ecb\u7ecd\u5982\u4f55\u505c\u6b62</p> <h3 id=\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f>\u6bd4\u8f83\u597d\u7684\u65b9\u5f0f</h3> <ol> <li>q/0, c:q/0, init:stop/0</li> </ol> <p>\u6700\u7b80\u5355\u548c\u76f4\u63a5\u7684\u65b9\u5f0f\u662f\u4f7f\u7528<code>q/0</code>\u6216\u8005<code>c:q/0</code>\uff08\u5b9e\u9645\u76f8\u540c\uff09\uff0c\u5c31\u50cf\u6587\u6863\u79cd\u7684\u4e00\u6837</p> <pre class=hljs><code class=language->This function is shorthand for init:<span class=hljs-literal>stop</span>(), that is, it causes the <span class=hljs-keyword>node</span> <span class=hljs-title>to</span> <span class=hljs-literal>stop</span> <span class=hljs-keyword>in</span> a controlled fashion.</code></pre><p><code>init:stop/0</code> :</p> <pre class=hljs><code class=language->The same as <span class=hljs-keyword>stop</span>(<span class=hljs-number>0</span>).</code></pre><p>\u6240\u4ee5\uff0c\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\u5c31\u662f\u8fd0\u884c<code>init:stop(0)</code>\u3002\u8981\u660e\u767d\u8fd9\u4e2a\u6307\u4ee4\u5982\u4f55\u8fd0\u884c\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u67e5\u6587\u6863\uff1a</p> <pre class=hljs><code class=language-><span class=hljs-keyword>All</span> applications are taken down smoothly, <span class=hljs-keyword>all</span> code <span class=hljs-keyword>is</span> unloaded, \n<span class=hljs-keyword>and</span> <span class=hljs-keyword>all</span> ports are closed <span class=hljs-keyword>before</span> the <span class=hljs-keyword>system</span> terminates <span class=hljs-keyword>by</span> calling halt(Status). \n<span class=hljs-keyword>If</span> command-<span class=hljs-type>line</span> flag -heart was specified, the heartprogram <span class=hljs-keyword>is</span> terminated <span class=hljs-keyword>before</span> the Erlang node terminates. \n<span class=hljs-keyword>For</span> more information, see heart(<span class=hljs-number>3</span>).\n\n<span class=hljs-keyword>To</span> <span class=hljs-keyword>limit</span> the shutdown <span class=hljs-type>time</span>, the <span class=hljs-type>time</span> init <span class=hljs-keyword>is</span> allowed <span class=hljs-keyword>to</span> spend taking down applications, \ncommand-<span class=hljs-type>line</span> flag -shutdown_time <span class=hljs-keyword>is</span> <span class=hljs-keyword>to</span> be used.</code></pre><p>\u6240\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u76f4\u63a5\u7684\u7ec8\u6b62\u65b9\u5f0f\u3002</p> <ol start=2> <li>erlang:halt/0</li> </ol> <p>\u5411\u4e0a\u8fb9\u7684\u6587\u6863\u4e2d\u63d0\u5230\u7684\u4e00\u6837\uff0c<code>erlang:halt()</code>\u548c<code>erlang:halt(0,[])</code>\u3002 \u66f4\u591a\u7684\u5185\u5bb9\u53ef\u4ee5\u770b\u4e0b\u8fb9\u7684<code>erlang:halt/1,2</code>\uff0c\u4f46\u662f\u73b0\u5728\uff0c<code>erlang:halt()</code> \u53ea\u505c\u6b62\u5173\u95ed VM\uff0c\u4e0d\u5904\u7406\u5e94\u7528\u7684\u7ec8\u6b62\u548c\u4efb\u4f55\u7684\u7aef\u53e3\u5173\u95ed</p> <ol start=3> <li>JCL mode</li> </ol> <p>\u5148\u524d\u7684\u65b9\u5f0f\u9700\u8981\u4f60\u80fd\u591f\u94fe\u63a5\u5230erlang shell\u624d\u53ef\u4ee5\u6267\u884c\u3002\u5982\u679c\u4f60\u505a\u4e0d\u5230\uff0c\u6216\u8005\u662fshell\u88ab\u963b\u6b62\u4e86\u8be5\u5982\u4f55\u64cd\u4f5c\uff1f \u5982\u679c\u4f60\u8fdb\u5165\u4e86shell\uff0c\u4f46\u662f\u65e0\u6cd5\u8f93\u5165\uff0c\u4f60\u53ef\u4ee5\u6307\u952e\u5165<code>Ctrl-g</code>(<a href=http://erlang.org/doc/man/shell.html#jcl-mode>JCL mode</a>)</p> <p>\u8fd9\u6837\u64cd\u4f5c\u7684\u6548\u679c\u548c<code>erlang:halt(0)</code>\u76f8\u540c</p> <ol start=4> <li>BREAK mode</li> </ol> <p>\u9664\u4e86<code>Ctrl-g</code>\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>Ctrl-c</code>\u3002 \u8fd9\u6837\u4f1a\u8fdb\u5165<code>*BREAK mode*</code>,\u6837\u5f0f\u5982\u4e0b\uff1a</p> <pre class=hljs><code class=language-><span class=hljs-keyword>BREAK: </span>(a)<span class=hljs-keyword>bort </span>(c)ontinue (p)roc info (i)nfo (l)oaded\n       (v)ersion (k)ill (D)<span class=hljs-keyword>b-tables </span>(d)istribution</code></pre><p>\u53ef\u4ee5\u7528\u4e24\u79cd\u65b9\u5f0f\u5173\u95ederlang\u8282\u70b9\uff1a</p> <ul> <li>Press <strong>Ctrl-c</strong> again</li> <li>Press <strong>a</strong> and then return</li> </ul> <p>\u6548\u679c\u90fd\u548c<code>erlang:halt(0)</code>\u4e00\u6837</p> <h3 id=\u4e0d\u597d\u7684\u65b9\u5f0f>\u4e0d\u597d\u7684\u65b9\u5f0f</h3> <p>\u5982\u679c\u60f3\u8981\u7528\u4e00\u4e9b\u4e0d\u592a\u597d\u7684\u65b9\u5f0f\u6765\u9000\u51fa\uff0c\u5e76\u751f\u6210\u67d0\u4e9b\u9519\u8bef\u62a5\u544a\u3002 \u90a3\u4e48\uff0c\u8fd9\u4e9b\u662f\u53ef\u4ee5\u505a\u7684\u9009\u62e9\u2026\u2026</p> <ol start=5> <li>erlang:halt/1,2</li> </ol> <p>\u6b63\u5982\u4f60\u770b\u5230\u7684<a href="https://erldocs.com/current/erts/erlang.html?i=0&amp;search=erlang:ha#halt/1">\u8fd9\u4e9b\u6587\u6863</a>\uff0c <code>erlang:halt/1,2</code>\u53ef\u4ee5\u63d0\u4ea4\u4e00\u4e9b\u9009\u9879\u5e76\u8f93\u51fa\u5904\u7406\u9519\u8bef\u3002\u53ef\u4ee5\u770b\u4e00\u4e0b\u6587\u6863\u4e2d\u7684\u8fd9\u4e9b\u9009\u9879\uff1a</p> <ul> <li>\u5982\u679c\u4f60\u60f3\u8981\u4e00\u4e2a\u5e72\u51c0\u7684\u5173\u95ed\u5e76\u4e14\u6709\u4e00\u4e2a\u5408\u9002\u7684\u9000\u51fa\u72b6\u6001\uff0c\u4f7f\u7528\u6574\u6570\u6bd4\u8f83\u597d</li> <li>\u5982\u679c\u9700\u8981\u751f\u6210<code>erl_crash.dump</code>\uff0c\u4f7f\u7528\u4e00\u4e2a<code>string</code></li> <li>\u5982\u679c\u9700\u8981\u751f\u6210<code>core dump</code>\uff0c\u53ef\u4ee5\u4f7f\u7528<code>atom</code> <code>abort</code></li> </ul> <p>\u5f53\u7136\uff0c\u65e0\u8bba\u9009\u62e9\u4ec0\u4e48\uff0c\u90fd\u4e0d\u4f1a\u7ec8\u6b62\u4efb\u4f55application\u548c\u5b98\u5f6c\u4efb\u4f55ports\uff0cetc.</p> <ol start=6> <li>Just kill it</li> </ol> <p>Erlang VM\u53ea\u662f\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u7a0b\uff0c\u5728\u7c7bUnix\u7cfb\u7edf\u53ef\u4ee5\u4f7f\u7528\u5173\u95ed\u8fdb\u7a0b\u7684\u4fe1\u53f7\u6765\u5173\u95ed\u8fdb\u7a0b\u3002 \u4e0d\u540c\u7684\u4fe1\u53f7\u4f1a\u7ed9Erlang VM\u4e0d\u540c\u7684\u5904\u7406\u3002\u901a\u5e38\u7684\u4fe1\u53f7\uff1a<code>kill -SIGTERM</code>\u7684\u884c\u4e3a\u4f1a\u548c<code>init:stop()</code>\u4e00\u6837\u3002 \u800c<code>kill -SIGKILL</code>\u4f1a\u548c<code>erlang:halt(137)</code>\u4e00\u6837</p> <p>\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u4fe1\u53f7\uff0c\u751f\u6210<code>erl_crash.dump</code>: <code>kill -SIGUSR1</code>\u3002</p> <h3 id=\u6700\u6076\u7684\u65b9\u5f0f>\u6700\u6076\u7684\u65b9\u5f0f</h3> <p>\u5173\u95ed\u865a\u62df\u673a\u7684\u4e50\u8da3\u4f55\u5728\uff1f\u8ba9\u4ed6\u4eec\u71c3\u70e7\u5427\u2026\u2026</p> <ol start=7> <li>Don&#39;t event let it start</li> </ol> <pre class=hljs><code class=language->$ erl -s something_that_doesnt_exist\nErlang/OTP <span class=hljs-number>20</span> [erts<span class=hljs-number>-9.0</span>] [source] [<span class=hljs-number>64</span>-bit] [smp:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>] [ds:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>:<span class=hljs-number>10</span>] [async-threads:<span class=hljs-number>10</span>] [kernel-poll:<span class=hljs-literal>false</span>]\n\u2026\ninit terminating <span class=hljs-keyword>in</span> do_boot ({undef,[{something_that_doesnt_exist,start,[],[]},{init,start_em,<span class=hljs-number>1</span>,[]},{init,do_boot,<span class=hljs-number>3</span>,[]}]})\nCrash dump <span class=hljs-keyword>is</span> being written to: erl_crash.dump...done</code></pre><ol start=8> <li>Kill the Kernel</li> </ol> <pre class=hljs><code class=language->$ erl\nErlang/OTP <span class=hljs-number>20</span> [erts-<span class=hljs-number>9.0</span>] [source] [<span class=hljs-number>64</span>-bit] [smp:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>] [ds:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>:<span class=hljs-number>10</span>] [async-threads:<span class=hljs-number>10</span>] [kernel-poll:false]\n\u2026\n<span class=hljs-number>1</span>&gt; exit(whereis(application_controller), kill).\ntrue\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n*** ERROR: <span class=hljs-keyword>Shell</span><span class=bash> process terminated! ***</span>\n{<span class=hljs-string>"Kernel pid terminated"</span>,application_controller,killed}\nKernel pid terminated (application_controller) (killed)\nCrash dump is being written to: erl_crash.dump...done</code></pre><ol start=9> <li>Exhaust the Atom Table</li> </ol> <pre class=hljs><code class=language->$ erl\nErlang/OTP <span class=hljs-number>20</span> [erts<span class=hljs-number>-9.0</span>] [source] [<span class=hljs-number>64</span>-bit] [smp:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>] [ds:<span class=hljs-number>8</span>:<span class=hljs-number>8</span>:<span class=hljs-number>10</span>] [async-threads:<span class=hljs-number>10</span>] [kernel-poll:<span class=hljs-literal>false</span>]\n\u2026\n<span class=hljs-number>1</span>&gt; [list_to_atom(<span class=hljs-built_in>int</span>eger_to_list(I)) || I &lt;- lists:seq(erlang:system_info(atom_count), erlang:system_info(atom_limit))].\nno more index entries <span class=hljs-keyword>in</span> atom_tab (max=<span class=hljs-number>1048576</span>)\nCrash dump <span class=hljs-keyword>is</span> being written to: erl_crash.dump...done</code></pre><ol start=10> <li>Turn off your Computer</li> </ol> <p><img src='+l("302492d1afd5e0e000f5")(l("1903807f62c23652f99e"))+" alt=laugh></p> ";s.exports=n}}]);