(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{"./app/data/blogs/ubuntu-18.04-ruby-and-elixir.md":function(s,e){s.exports='<h1 id=ubuntu-18-04-ruby-and-elixir-development-setup>Ubuntu 18.04 Ruby and Elixir Development Setup</h1> <p>Guide to setting up a new Ubuntu 18.04 dev environment with Ruby and Elixir installed with the asdf version management tool.</p> <h2 id=update-system-and-install-prerequisite-packages>Update system and install prerequisite packages</h2> <p>Some of these packages may already be installed</p> <pre class=hljs><code class=language-bash>sudo apt-get install mercurial make binutils bison gcc \\\n build-essential git curl zlib1g-dev openssl libssl-dev libreadline-dev \\\n libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev \\\n software-properties-common wget dnsutils vim zip unzip screen tmux htop \\\n libffi-dev redis-server imagemagick ntp ufw sudo dirmngr libxrender1</code></pre><p>Install postfix SMTP server (Choose internet site configuration and use the server&#39;s domain name)</p> <pre class=hljs><code class=language-bash>sudo apt-get install postfix</code></pre><p>Edit postfix config file</p> <pre class=hljs><code class=language-bash>sudo vim /etc/postfix/main.cf</code></pre><p>Set inet_interfaces to be loopback-only</p> <pre class=hljs><code class="language-undefined"><span class=hljs-attr>inet_interfaces</span> = loopback-<span class=hljs-literal>on</span>ly</code></pre><p>Generate an SSH keypair used for deployments</p> <pre class=hljs><code class=language-bash>ssh-keygen -t rsa -C <span class=hljs-string>"YOUR@EMAIL.com"</span></code></pre><p>Copy the output of this command and paste into <a href=https://github.com/settings/keys>github SSH key settings</a>.</p> <pre class=hljs><code class=language-bash>cat ~/.ssh/id_rsa.pub</code></pre><p>Check to make sure SSH to github works with your key</p> <pre class=hljs><code class=language-bash>ssh -T git@github.com</code></pre><h2 id=postgresql>PostgreSQL</h2> <pre class=hljs><code class=language-bash>sudo apt-get install postgresql-10 libpq-dev</code></pre><p>Set postgres user password</p> <pre class=hljs><code class="language-undefined">sudo -u postgres psql\npostgres=<span class=hljs-comment># \\password postgres</span></code></pre><h2 id=zsh-and-oh-my-zsh>zsh and oh-my-zsh</h2> <pre class=hljs><code class=language-bash>sudo apt-get install zsh fonts-powerline\nchsh -s $(<span class=hljs-built_in>which</span> zsh)\n<span class=hljs-comment># logout and back in</span>\nsh -c <span class=hljs-string>"<span class=hljs-variable>$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></code></pre><h2 id=asdf-version-manager>asdf version manager</h2> <pre class=hljs><code class=language-bash>sudo apt-get install automake autoconf libreadline-dev libncurses-dev \\\nlibssl-dev libyaml-dev libxslt-dev libffi-dev libtool unixodbc-dev \\\nlibwxgtk3.0-dev libgl1-mesa-dev  libglu1-mesa-dev libssh-dev xsltproc fop \\\nlibxml2-utils\n\ngit <span class=hljs-built_in>clone</span> https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.4.3\n\n<span class=hljs-comment># add to bottom of .zshrc</span>\n<span class=hljs-built_in>echo</span> -e <span class=hljs-string>\'\\n. $HOME/.asdf/asdf.sh\'</span> &gt;&gt; ~/.zshrc\n<span class=hljs-built_in>echo</span> -e <span class=hljs-string>\'\\n. $HOME/.asdf/completions/asdf.bash\'</span> &gt;&gt; ~/.zshrc\n\n<span class=hljs-built_in>source</span> ~/.zshrc</code></pre><h2 id=ruby-and-ruby-on-rails>Ruby and Ruby on Rails</h2> <pre class=hljs><code class=language-bash>asdf plugin-add ruby\nasdf install ruby 2.5.1\nasdf global ruby 2.5.1\nruby -v</code></pre><p>Tell RubyGems to not install documentation for each gem</p> <pre class=hljs><code class=language-bash><span class=hljs-built_in>echo</span> <span class=hljs-string>"gem: --no-ri --no-rdoc"</span> &gt; ~/.gemrc</code></pre><p>Install bundler and rails</p> <pre class=hljs><code class=language-bash>gem install bundler\ngem install rails</code></pre><h2 id=node-js>Node.js</h2> <pre class=hljs><code class=language-bash>asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git\nbash ~/.asdf/plugins/nodejs/bin/import-release-team-keyring\nasdf install nodejs 9.11.1\nasdf global nodejs 9.11.1\nnode -v</code></pre><h2 id=erlang-elixir-and-phoenix>Erlang, Elixir and Phoenix</h2> <h3 id=erlang>Erlang</h3> <pre class=hljs><code class=language-bash>asdf plugin-add erlang\nasdf install erlang 20.3.4\nasdf global erlang 20.3.4</code></pre><h3 id=elixir>Elixir</h3> <pre class=hljs><code class=language-bash>asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git\nasdf install elixir 1.6.4\nasdf global elixir 1.6.4\nelixir -v</code></pre><h3 id=phoenix>Phoenix</h3> <pre class=hljs><code class=language-bash>sudo apt-get install inotify-tools\nmix local.hex\nmix archive.install https://github.com/phoenixframework/archives/raw/master/phx_new.ez</code></pre><h2 id=other-tools>Other Tools</h2> <h3 id=wkhtmltopdf>wkhtmltopdf</h3> <p>The wkhtmltopdf packge available in debian repo is version with unpatched QT. You most likely want version with patched QT, so download the precompiled binaries for Linux from <a href=https://wkhtmltopdf.org/downloads.html>https://wkhtmltopdf.org/downloads.html</a>, extract them and cp the binaries in bin folder to <code>/usr/bin/</code></p> <p>At the time of writing, the latest version is 0.12.4 which has an issue fetching remote images over https, so you will need to install libssl1.0-dev</p> <pre class=hljs><code class=language-bash>sudo apt-get install libssl1.0-dev</code></pre><h3 id=postgis-and-geospatial-related-tool-dependencies>PostGIS and Geospatial related tool dependencies</h3> <pre class=hljs><code class=language-bash>sudo apt-get install python-all-dev python-dev python3-pip \\\n libaio-dev libbz2-dev libjpeg-turbo8-dev libpcre3-dev libexpat1-dev \\\n liblzma-dev libevent-dev binutils libproj-dev xsltproc docbook-xsl \\\n docbook-mathml libgeos-dev libgeos-3.6.2 postgresql-10-postgis-2.4 \\\n libgdal-dev python3-gdal python3-numpy gdal-bin postgresql-10-postgis-scripts</code></pre><p>Add to .zshrc</p> <pre class=hljs><code class=language-bash><span class=hljs-built_in>export</span> CPLUS_INCLUDE_PATH=/usr/include/gdal\n<span class=hljs-built_in>export</span> C_INCLUDE_PATH=/usr/include/gdal</code></pre><p>Make sure rgeo will be able to find geos</p> <pre class=hljs><code class=language-bash>sudo ln -s /usr/lib/x86_64-linux-gnu/libgeos-3.6.2.so /usr/lib/libgeos.so\ngem install rgeo</code></pre>'}}]);