(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"./app/data/blogs/tern-js.md":function(s,l){s.exports='<h2 id=tern-javascript->Tern: JavaScript 智能分析工具</h2> <p>Tern 是一个独立的JavaScript代码分析引擎</p> <p>Tern 被设计成为编辑器插件，用来强化编辑器的智能编辑。</p> <p>提供了如下特性：</p> <ul> <li>自动完成变量名称／属性</li> <li>函数参数提示</li> <li>查询表达式属性</li> <li>查到目标定义的地点</li> <li>自动重构</li> </ul> <h3 id=->编辑器插件</h3> <ul> <li>Emacs</li> <li>Vim</li> <li>Sublime Text</li> <li>Brackets (built in to the base editor)</li> <li>Light Table</li> <li>Eclipse (and general Java API)</li> <li>TextMate</li> <li>SourceLair (built in to the base editor)</li> <li>Chocolat (built in to the base editor)</li> </ul> <h3 id=->支持文档与配置</h3> <p><a href=http://ternjs.net/doc/manual.html>在线文档</a></p> <p>配置文件，需要在项目下添加<code>.tern-project</code>文件 格式为JSON格式，示例如下：</p> <pre class=hljs><code class=language-json>{\n  <span class=hljs-attr>"libs"</span>: [\n    <span class=hljs-string>"browser"</span>,\n    <span class=hljs-string>"jquery"</span>\n  ],\n  <span class=hljs-attr>"loadEagerly"</span>: [\n    <span class=hljs-string>"importantfile.js"</span>\n  ],\n  <span class=hljs-attr>"plugins"</span>: {\n    <span class=hljs-attr>"doc_comment"</span>: {},\n    <span class=hljs-attr>"node"</span>: {},\n    <span class=hljs-attr>"webpack"</span>: {\n      <span class=hljs-attr>"configPath"</span>: <span class=hljs-string>"./tasks/webpack.conf.js"</span>\n    }\n  }\n}\n</code></pre><h4 id=libs>libs</h4> <p>整个项目中包含的库，由<a href=http://ternjs.net/doc/manual.html#typedef>JSON type descriptions</a>格式指定</p> <p>使用JSON格式定义的库文档，全局有效</p> <p>已有预定义库：</p> <ul> <li>browser</li> <li>chai</li> <li>ecmascript</li> <li>jquery</li> <li>react</li> <li>underscore</li> </ul> <h4 id=loadeagerly>loadEagerly</h4> <p>配置总是会加载的文件</p> <h4 id=plugins->Plugins - 支持的插件：</h4> <ul> <li>commonjs</li> <li>angular</li> <li>complete_strings</li> <li>doc_comment</li> <li>es_modules</li> <li>modules</li> <li>node_resolve</li> <li>requirejs</li> <li>node</li> <li>webpack</li> </ul> <p>其它配置项可以参考在线文档</p> <h3 id=->安装</h3> <pre class=hljs><code class=language-shell>\nnpm install -g tern\n// or\nyarn global add tern\n</code></pre><h3 id=->使用</h3> <p>编辑器会自动从<code>PATH</code>下启动<code>tern</code></p> <h4 id=emacs->Emacs 使用</h4> <pre class=hljs><code class=language-lisp>(<span class=hljs-name>maybe-require-package</span> \'tern)\n(<span class=hljs-name>maybe-require-package</span> \'company-tern)</code></pre><p>使用搜索<code>tern</code>开头的函数</p> <p>默认快捷键</p> <ul> <li><code>M-.</code> 跳到定义点</li> <li><code>m-,</code> 跳回</li> <li><code>C-c c</code> 读取类型</li> <li><code>C-c d</code> 读取文档</li> </ul> <h4 id=->其它编辑器</h4> <p>配置类似Emacs</p> <p>快捷键检查通过命令搜索，预定义快捷键</p> <h4 id=debug>DEBUG</h4> <p>启动<code>tern</code>，项目目录下：</p> <pre class=hljs><code class=language-shell>\ntern --persistent --debug --verbose\n</code></pre><p>可以向<code>tern</code>监听的端口发送<code>POST</code>请求就可以获取对应数据信息</p> <p>示例：</p> <pre class=hljs><code class=language-shell><span class=hljs-meta>\nMac-Pro%</span><span class=bash> curl -i localhost:64672 -X POST -d <span class=hljs-string>\'</span></span>\n{"query": {\n    "end": 4,\n    "file": "assets/javascripts/zddi/address/audit_ip/models/audit_ips.js",\n    "type": "definition",\n    "variable": null\n  }}\'\nHTTP/1.1 200 OK\ncontent-type: application/json; charset=utf-8\nDate: Sun, 25 Jun 2017 11:10:56 GMT\nConnection: keep-alive\nTransfer-Encoding: chunked\n\n{"origin":"assets/javascripts/zddi/common/models/collection.js","start":361,"end":1130,"file":"assets/javascripts/zddi/common/models/collection.js","contextOffset":50,"context":"able: false,\\n\\n    model: Model,\\n\\n    constructor: "}%\n</code></pre>'}}]);